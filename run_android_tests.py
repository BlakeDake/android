#!/usr/bin/env python3
"""
Run all FQNs in ui_test_fqns.txt via a single Gradle invocation.
Avoids Windows 8 191-char limit and the per-batch startup overhead.
"""
import os, platform, subprocess, sys, tempfile, textwrap, shlex

LIST_FILE = "ui_test_fqns.txt"
GRADLE_TASK = "testStandardDebugUnitTest"
EXTRA_FLAGS = [
    "--rerun-tasks",          # always re-execute the task
    "--configuration-cache",  # skip configuration on repeat runs
    "--build-cache",          # reuse previous task outputs
    "--parallel",             # run independent modules in parallel
    "--max-workers=16",       # cap worker threads (adjust to your CPU/CI limits)
]

GRADLEW = ".\\gradlew.bat" if platform.system() == "Windows" else "./gradlew"

# ─── validate & count ───────────────────────────────────────────────────────────
if not os.path.exists(LIST_FILE):
    sys.exit(f"ERROR: {LIST_FILE!r} not found")

with open(LIST_FILE, encoding="utf-8") as fh:
    tests = [ln.strip() for ln in fh if ln.strip() and not ln.lstrip().startswith("#")]

if not tests:
    print(f"INFO : {LIST_FILE} is empty → nothing to run")
    sys.exit(0)

print(f"INFO : {len(tests)} tests queued")

# ─── build a temp init-script ───────────────────────────────────────────────────
init_fd, init_path = tempfile.mkstemp(suffix=".gradle", text=True)
with os.fdopen(init_fd, "w", encoding="utf-8") as g:
    g.write(textwrap.dedent(f"""\
        // Generated by run_android_tests.py – DO NOT COMMIT
        allprojects {{
            tasks.withType(Test).configureEach {{ t ->
                def listFile = file("{LIST_FILE.replace("\\", "/")}")
                if (listFile.exists()) {{
                    listFile.eachLine {{ ln ->
                        ln = ln.trim()
                        if (ln && !ln.startsWith('#')) {{
                            t.filter.includeTestsMatching(ln)
                        }}
                    }}
                }}
            }}
        }}
    """))

print(f"INFO : init-script wrote {len(tests)} include filters → {init_path}")

# ─── call Gradle once ───────────────────────────────────────────────────────────
cmd = [GRADLEW, GRADLE_TASK, *EXTRA_FLAGS, "--init-script", init_path]
print("\nExecuting once:\n", " ".join(shlex.quote(c) for c in cmd), "\n")

try:
    subprocess.run(cmd, check=True)
    print("\nSUCCESS ✓ all requested tests executed in one build")
    sys.exit(0)
except subprocess.CalledProcessError as e:
    print(f"\nGradle failed with exit code {e.returncode}")
    sys.exit(e.returncode)
finally:
    os.remove(init_path)        # tidy up temp file
